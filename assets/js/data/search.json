[ { "title": "Iterator Design Pattern", "url": "/design-patterns/iterator-pattern/", "categories": "Design-Patterns", "tags": "design-pattern, iterator-pattern, behavioral-design-pattern, clean-code", "date": "2021-06-26 00:00:00 +0600", "snippet": "ইটারেটর ডিজাইন প্যাটার্ন এক ধরনের behavioural design pattern যার সাহায্যে ভিন্ন ধরনের অবজেক্ট একইভাবে ইটারেট করার সুবিধা পাওয়া যায়।According to the book Design Patterns: Elements of Reusable Object-Oriented Software, Iterator Pattern is used to - Provide a way to access the elements of an aggreg..." }, { "title": "Template Method Design Pattern", "url": "/design-patterns/template-method-pattern/", "categories": "Design-Patterns", "tags": "design-pattern, template-method-pattern, behavioral-design-pattern, clean-code", "date": "2021-06-06 00:00:00 +0600", "snippet": "Template Method Design Pattern একধরনের behavioral design pattern যা একই ধরনের অ্যালগোরিদম এর জন্য একটা স্কেলেটন provide করে যার ফলশ্রুতিতে code duplicacy অনেক কমানো যায়।According to the book Design Patterns: Elements of Reusable Object-Oriented Software (Gang of Four) Template Method Pattern is u..." }, { "title": "Decorator Design Pattern", "url": "/design-patterns/decorator-pattern/", "categories": "Design-Patterns", "tags": "design-pattern, decorator-pattern, structural-pattern, clean-code", "date": "2021-05-28 00:00:00 +0600", "snippet": "Decorator Pattern একধরনের structural design pattern যা ব্যবহার করে runtime এ কোন object-এ dynamically behaviour add করা যায়।According to the book “Design Patterns: Elements of Reusable Object-Oriented Software”, Decorator pattern is defined as - “Attach additional responsibilities to an object d..." }, { "title": "Builder Design Pattern", "url": "/design-patterns/builder-pattern/", "categories": "Design-Patterns", "tags": "design-pattern, builder-pattern, creational-design-pattern, clean-code", "date": "2021-05-22 00:00:00 +0600", "snippet": "According to the book Design Patterns: Elements of Reusable Object-Oriented Software (Gang of Four) Builder Pattern is used to - “Separate the construction of a complex object from its representation so that the same construction process can create different representations.”Builder Pattern একধর..." }, { "title": "Strategy Design Pattern", "url": "/design-patterns/strategy-pattern/", "categories": "Design-Patterns", "tags": "design-pattern, strategy-pattern, clean-code", "date": "2021-05-09 00:00:00 +0600", "snippet": "Definition of Strategy PatternThe Strategy Pattern defines a family of algorithms, encapsulates each one, and makes them interchangeable. Strategy lets the algorithm vary independently from clients that use it.আমরা Strategy Pattern সম্পর্কে জানার আগে একটা রিয়েল লাইফ প্রবলেমকে খুবই Naive ভাবে সলভ ..." }, { "title": "Daily driving tools and fonts for Manjaro (My Manjaro Setup)", "url": "/linux/manjaro-setup/", "categories": "Linux", "tags": "manjaro, arch, developer-setup, linux", "date": "2021-04-22 00:00:00 +0600", "snippet": "Manjaro is a free and open-source Linux distribution based on the Arch Linux operating system. I use it as my daily driving development device.One of the most beautiful features of Manjaro is its Rolling Release Development Model where the same core system is continually updated and upgraded rath..." }, { "title": "What is type coercion in Javascript?", "url": "/javascript/type-coercion-javascript/", "categories": "Javascript", "tags": "javascript, coercion", "date": "2021-01-11 00:00:00 +0600", "snippet": "JavaScript will quietly convert that value to the type it needs, using a set of rules that often aren’t what you want or expect.This is called type coercion.Let’s see some console log examples- console.log(“7” + 1) → 71 console.log(“7” - 1) → 6 console.log(null * 7) → 0 console.log(7 * “five”..." }, { "title": "Meme (প্রবলেম) সলভিং সিরিজ — পর্ব ০১", "url": "/problem-solving/meme-problem-solving-1/", "categories": "Problem-Solving", "tags": "algorithms, problem-solving, meme", "date": "2020-09-04 00:00:00 +0600", "snippet": "সিরিজের নামটা বেশ অদ্ভুত আর কনফিউজিং হলেও সিরিজটি ইন্টারেস্টিং হবে বলে আশা করছি। বেসিক্যালি এই সিরিজে আমরা রিয়েল লাইফ এর সাথে কানেক্ট করা যায় এমন মীম গুলোকে কম্পিউটার প্রোগ্রাম লিখে সলভ করার চেষ্টা করব এবং বিভিন্ন ধরনের ডেটা স্ট্রাকচার নিয়ে আলোচনা করব।এই সিরিজটার উদ্দেশ্য হচ্ছে, যাতে একটু মজা করে..." }, { "title": "মিলার রবিন প্রাইমালিটি টেস্ট", "url": "/algorithms/miller-rabin/", "categories": "Algorithms", "tags": "algorithms, problem-solving, number-theory, contest", "date": "2017-04-29 00:00:00 +0600", "snippet": "মৌলিক সংখ্যা বের করার অনেকগুলো উপায় আমরা জানি। খুব বেশি একটা উপায় না জানলেও ইরাটোস্থ্যানেস এর সিভ (Sieve of Eratosthenes) – এই অ্যালগোরিদমটি প্রায় সবাই জানি। কিন্তু বড় যেকোনো সংখ্যার ক্ষেত্রে সিভ মেথডটা অনেক বেশি সময় নেয়। তাই সিভ এর পাশাপাশি যদি আরো কয়েকটি অ্যালগোরিদম আমাদের জানা থাকে তাহলে প্রা..." } ]
